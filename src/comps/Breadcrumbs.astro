---
import { SITE_TITLE } from "@src/consts";
import Stack from "@comps/Stack.astro";
import Item from "@comps/Item.astro";
import { Icon } from "astro-icon/components";

let items: { name: string; path: string }[] = [];
let path = "";
for (const segment of Astro.url.pathname.split("/")) {
  path += `${segment}/`;
  items.push({
    name: segment.replaceAll("-", " ").replace(/\w/, (c) => c.toUpperCase()),
    path,
  });
}
items[0].name = SITE_TITLE;
if (items.at(-1)?.name === "") {
  items.pop();
}
const nodes = items.slice(0, -1);
const leaf = items.at(-1)!;
---

<nav aria-label="breadcrumbs">
  <Stack direction="row" inline ordered class="breadcrumbs-stack">
    {
      nodes.map((node, i) => (
        <Fragment>
          <Item
            class:list={[
              "breadcrumb-item",
              i ? "breadcrumb-node" : "breadcrumb-root",
            ]}
          >
            <a class="breadcrumb-anchor" href={node.path} aria-current="false">
              {node.name}
            </a>
          </Item>
          <Icon
            class="breadcrumb-separator"
            name="lucide:chevron-right"
            aria-hidden
          />
        </Fragment>
      ))
    }
    <Item
      class:list={[
        "breadcrumb-item",
        "breadcrumb-leaf",
        { "breadcrumb-root": !nodes.length },
      ]}
    >
      <span aria-current="page">{leaf.name}</span>
    </Item>
  </Stack>
</nav>

<style>
  .breadcrumb-anchor {
    text-decoration: none;
  }

  .breadcrumb-root {
    font-weight: 600;
  }

  @media (max-width: 600px) {
    .breadcrumb-item {
      display: none;

      &.breadcrumb-root {
        display: unset;
      }
    }

    .breadcrumb-separator {
      display: none;
    }
  }
</style>
