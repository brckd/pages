---
import { Image } from "astro:assets";
import Tags from "@comps/Tags.astro";

interface Props extends astroHTML.JSX.HTMLAttributes {
  title?: string;
  href?: URL | string;
  image?:
    | ImageMetadata
    | Promise<{
        default: ImageMetadata;
      }>;
  imageAlt?: string;
  description?: string;
}

const { title, href, image, imageAlt, description } = Astro.props;
---

<article {...Astro.props} class="card">
  {
    (Astro.slots.has("header") ||
      Astro.slots.has("title") ||
      title ||
      href) && (
      <header class="card-header">
        <slot name="header" />
        <slot name="title">
          {(href || title) && (
            <a class="card-link" href={href}>
              <slot name="title">
                <h2 class="card-title">{title ?? href}</h2>
              </slot>
            </a>
          )}
        </slot>
      </header>
    )
  }
  {
    (Astro.slots.has("description") || description) && (
      <span class="card-description">
        <slot name="description">{description}</slot>
      </span>
    )
  }
  {
    (Astro.slots.has("image") || image) && (
      <div class="card-image-box">
        <slot name="image">
          {image && (
            <Image src={image} width={600} alt={imageAlt!} class="card-image" />
          )}
        </slot>
      </div>
    )
  }
  {
    Astro.slots.has("footer") && (
      <footer class="card-footer">
        <slot name="footer" />
      </footer>
    )
  }
</article>

<style>
  .card {
    display: grid;
    flex-direction: column;
    grid-template-columns: 3fr 2fr;
    gap: var(--spacing-gap);
    background: rgb(var(--color-mantle));
    padding: var(--spacing-padding);
    border-radius: var(--radius-layout);

    > :global(*) {
      --color-mantle: var(--color-crust);
      grid-column: 1;
    }

    &:not(:has(.card-image-box)) {
      display: flex;
    }
  }

  .card-title {
    margin: 0;
  }

  .card-description {
    text-align: justify;
  }

  @media (max-width: 600px) {
    .card-card {
      display: flex;
    }
  }

  .card-header {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-gap);
  }

  .card-footer {
    font-size: smaller;
    color: rgb(var(--color-subtext1));
  }

  .card-link {
    text-decoration: none;
  }

  .card-image-box {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background: rgb(var(--color-mantle));
    overflow: hidden;
    border-radius: var(--radius-layout);
    grid-column: 2;
    grid-row: 1 / span 3;
  }

  .card-image {
    object-fit: cover;
    max-height: 160px;
    width: 100%;
    height: 100%;
  }

  @media (max-width: 600px) {
    .card-image {
      max-width: 600px;
      max-height: 200px;
      height: auto;
    }
  }

  .card-tags {
    all: unset;
    display: flex;
    gap: var(--spacing-gap);
    flex-wrap: wrap;

    li {
      all: unset;
    }
  }
</style>
