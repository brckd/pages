---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Tag from "@comps/Tag.astro";

export const prerender = true;

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { pubDate, tags } = post.data;
const { Content } = await post.render();

const formatDate = (date: Date) =>
  date.toLocaleString("en-GB", {
    dateStyle: "medium",
    timeStyle: "short",
  });
---

<Layout {...post.data}>
  <article>
    <header class="article-header">
      <ul class="article-tags">
        {
          tags.map((tag) => (
            <li class="tag">
              <Tag>
                <a class="tag-link" href={`../?tags=${tag}`}>
                  {tag}
                </a>
              </Tag>
            </li>
          ))
        }
      </ul>
      <time class="article-pubdate" datetime={pubDate.toISOString()}
        >{formatDate(pubDate)}</time
      >
    </header>
    <Content />
  </article>
</Layout>

<style>
  .article-header {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-gap);
  }

  .article-pubdate {
    font-size: smaller;
    color: rgb(var(--color-subtext1));
  }

  .article-tags {
    all: unset;
    display: flex;
    gap: var(--spacing-gap);

    li {
      all: unset;
    }
  }

  .tag-link {
    text-decoration: none;
  }
</style>
