---
import Layout from "@layouts/Layout.astro";
import { getCollection } from "astro:content";
import Card from "@comps/Card.astro";
import Stack from "@comps/Stack.astro";
import Item from "@comps/Item.astro";
import Tags, { splitTags } from "@comps/Tags.astro";

export const prerender = false;

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const activeTags = splitTags(Astro.url.searchParams.get("tags") ?? "");

const filteredPosts = activeTags.size
  ? posts.filter((post) => activeTags.isSubsetOf(new Set(post.data.tags)))
  : posts;

function formatReadTime(minutes: number) {
  return `${Math.ceil(minutes)} minute${minutes > 1 ? "s" : ""} read`;
}
---

<Layout title="Blog">
  <Tags tags={posts.flatMap((post) => post.data.tags)} id="tags" />
  <Stack>
    {
      filteredPosts.map(async ({ slug, data, render }) => {
        const readTime = (await render()).remarkPluginFrontmatter.readingTime
          .minutes;
        return (
          <Item>
            <Card
              title={data.title}
              href={`/blog/${slug}`}
              description={data.description}
              image={data.banner}
              imageAlt={data.bannerAlt}
              readTime={readTime}
              pubDate={data.pubDate}
            >
              <Tags slot="header" tags={data.tags} />
            </Card>
          </Item>
        );
      })
    }
  </Stack>
</Layout>

<style>
  #tags {
    margin-bottom: var(--spacing-gap);
  }
</style>
